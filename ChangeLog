2013-09-03 lttng-tools 2.3.0
	* Fix: remove periodical flush test from make check

2013-08-30 lttng-tools 2.3.0-rc3
	* Fix: hashtable: take split_count_order into account
	* Fix: remove wrong doing asserts in sessiond
	* Tests: fix periodical flush tests to stop app
	* Fix: correctly close metadata on sessiond thread shutdown
	* Fix: delete the trace directory used for the test
	* Fix: remove bad check after epoll wait in consumer
	* Fix: missing data pending signess conversion
	* Fix: consumer data pending for empty streams
	* Fix: hash table growth (for small tables) should be limited (v2)
	* Fix: run_as gid/uid test should return result to parent
	* Fix: missing check for metadata data pending
	* Tests: change buffers UID test to PID
	* Tests: fix health tests to use custom socket timeout
	* Fix: remove health test from fast regression
	* Use socket timeout value for tcp timeout if available
	* Fix: set the health delta tcp timeout aware
	* Get the maximum TCP timeout in sessiond
	* Fix: don't report error if UST app dies
	* Fix: support VPATH build for tests
	* Improve comments after review
	* Rename consumer socket fd to fd_ptr
	* Lock consumer data before fd check during destroy
	* Use single callsite for send/recv ops. for consumer in sessiond
	* Use consumer fd reference in consumer socket obj
	* Update bash completion
	* Add --list-commands option to the snapshot command
	* Reorder functions _lttng_cmd_* functions in bash completion
	* Use parse_size_suffix in snapshot
	* Fix: snapshot record error handling
	* Fix: improve error message when UST support is disabled
	* Fix: add missing short filter option in help
	* Fix: typo in configure.ac for version check
	* Fix: remove calibrate syscall option from code
	* Fix: snapshot should fail if no successful snapshot is taken
	* Fix: check UST float field mantissa length
	* Fix: add UST context in the same order the user enabled them
	* Introduce configure --with-lttng-system-rundir
	* Add .dirstamp to gitignore file
	* Fix: snapshot with multiple UIDs
	* Prepare for automake deprecation of missing subdir-objects
	* Fix: typos in --help and manpage
	* Fix: add-context without -c apply to all channels
	* Fix: channels can be _enabled_ after tracing is started, but not created
	* Fix filter parser segmentation fault with bison 3.0
	* Fix: typo in error msg
	* Fix: imprecise error message about root sessiond/tracing group
	* Fix: don't skip chmod if tracing group is not found
	* Tracepoint probes don't need extern C
	* Fix: Snapshot should be taken asap in core handler script
	* Fix: reset out_fd_offset when we rotate the trace file
	* Fix: LTTNG_ERR_NEED_ROOT_SESSIOND error message
	* inet/inet6 sockets: apply timeout
	* Implement timeout for connect ipv4/ipv6
	* Introduce LTTNG_NETWORK_SOCKET_TIMEOUT env. var
	* bash completion: add calls to _lttng_complete_sessions
	* bash completion: Fix copy-paste typo
	* Extras: Remove deprecated consumer commands in bash completion
	* bash completion: Remove underscores in handler function names
	* bash completion: Remove --event for add-context
	* Update gitignore
	* relayd: use version macros from build rather than scanf
	* sessiond: use version major/minor from build for communication with relayd
	* build: export major/minor/patchlevel numbers
	* Fix: Dead code when checking return value from (ust_app|kernel)_snapshot_record
	* Test: enable kernel events after start
	* Fix: kernel ctl error codes are based on errno
	* Fix: format string mismatch
	* test: test_periodical_metadata_flush shrink timer period, kill app
	* Fix: format string type mismatch
	* snapshot howto: update text
	* Add snapshot howto

2013-07-19 lttng-tools 2.3.0-rc2
	* Add core-handler README to dist tarball
	* extras: core-handler: simplify, allow usage from tracing group
	* Cleanup: add missing dot
	* Fix: documentation: create name and options
	* Add core dump snapshot handler script
	* Fix: sym name len (kernel)
	* Fix: tests: provide channel name when a non-default channel exists: per-pid
	* Fix: tests: provide channel name when a non-default channel exists
	* Fix: data pending race
	* Fix hang in make check snapshots/test_ust
	* Cleanup: ust-consumer: wrong indentation
	* Fix: print dots while waiting for data availability
	* Fix: remove sleep(1) added by "Fix: (slight UI change) refuse missing -c if non-default channel exists"
	* Fix: (slight UI change) refuse missing -c if non-default channel exists
	* Fix: push metadata on stop for per-UID buffers
	* README: update python documentation
	* Manpage: other layout cleanups
	* Manpage: cleanup layout of view
	* Manpage: cleanup layout of version
	* Manpage: cleanup layout of stop
	* Manpage: cleanup layout of start
	* Manpage: cleanup layout of snapshot
	* Manpage: cleanup layout of set-session
	* Manpage: cleanup layout of list
	* Manpage: cleanup layout of disable-event
	* Manpage: cleanup layout of disable-channel
	* Manpage: cleanup layout of enable-event
	* Manpage: cleanup layout of enable-channel
	* Manpage: cleanup layout of destroy
	* Manpage: cleanup layout of create
	* Manpage: cleanup layout of calibrate
	* Manpage: cleanup layout of add-context
	* Documentation: create --snapshot in manpage

2013-07-17 lttng-tools 2.3.0-rc1
	* Fix: add missing snapshot header to dist tarball
	* Documentation: fix thread quit pipe comment
	* Test for presence of bison and flex when building from git
	* Test UST snapshot with large metadata
	* Add test application with large metadata
	* Cleanup: remove redundant assignment
	* Fix: use per-uid buffer registry for UID buffer snapshots
	* cmd.c: fix typos in snapshot commands
	* Test snapshot per-uid post-mortem
	* Remove leftover fprintf
	* Fix deadlock: don't take channel lock in timer
	* Introduce channel timer lock
	* document lttng_ustconsumer_request_metadata locking constraints
	* consumer: remove unused lttng_ustconsumer_push_metadata
	* Document metadata_socket_lock nesting
	* lttng_ustconsumer_recv_metadata does not need all those locks
	* document metadata_switch_timer() deadlock
	* Fix: add missing metadata socket lock
	* document metadata_switch_timer() locking constraints
	* consumer: remove timeout for UST metadata
	* Introduce pipe for UST metadata cache and stream
	* consumer: replace DBG2() instances by DBG()
	* Introduce utils_create_pipe_cloexec_nonblock()
	* ust consumer: data_pending check is endpoint active
	* Fix: kernel consumer: data_pending check if endpoint active
	* consumer: explicitly set endpoint status to active at init
	* document consumer_metadata_cache_flushed use of consumer_data.lock
	* consumer: introduce channel lock
	* Merge branch 'master' of git://git.lttng.org/lttng-tools
	* Fix: update lttng snapshot help output
	* Man: fix part of snapshot documentation
	* Fix: set tracefile size test with PID buffers
	* Fix: Babelstats fail to parse output with no process name or pid
	* Missing NULL pointer init in tap.c
	* Fix: Unchecked asprintf/vasprintf return values
	* Add snapshots test to fast regression
	* Fix: kernel data unit test
	* Fix: snapshot returned valid LTTNG_ERR code
	* Add the number of snapshot taken to the output path
	* Fix: RCU read side lock unbalanced
	* Fix: zeroed snapshot output at init
	* Support del-output with an output name
	* Update man page with snapshot command
	* New UST default buffers is now per UID
	* Bump UST ABI major version for 2.3 release
	* Add snapshot mode to lttng list session
	* Fix: support temporary snapshot max size and name
	* Support snapshot max-size limitation
	* Tests: per-UID UST snapshot
	* Fix: snapshot support for UST and kernel in same session
	* Implement lttng create --snapshot command
	* Add create session snapshot API in lttng-sessiond
	* Add snapshot output init call that uses URIs
	* Fix: consumer err_sock cloexec
	* Callsite: add "ip" context
	* Fix: possible consumer sockets double close on cleanup
	* Automatically load kvm-x86 and kvm-x86-mmu probes.
	* Fix: consumer: use uint64_t for all sessiond_id
	* Fix: add gpl and lgpl files to tarball
	* Fix: don't install libtap system wide
	* Fix: close consumer sockets in sessiond cleanup
	* Fix: set globally visible flag to kernel stream
	* Fix: lttng: memory leak in snapshot record command
	* Fix: kernel-consumer: double-close
	* Fix: consumer: incorrect size zmalloc
	* Fix: don't try to send stream to relayd if not in streaming
	* Fix: relayd refcount updates for stream
	* Fix: don't send error to sessiond on orderly shutdown
	* Fix: bad pathname used when sending kernel stream to relayd
	* Fix: add globally visible flag in stream
	* Fix: destroy metadata stream on setup metadata error path
	* Fix: send kernel stream to relayd only if needed
	* Fix: destroy streams for kernel snapshot sessions as well
	* Fix: close and destroy metadata stream after a kernel snapshot
	* Fix: print errno message on connect() error
	* Fix: possible double-close on stream out_fd
	* Fix: session ID signess to uin64_t in sessiond
	* Tests: fix validation trace path in kernel snapshot
	* Tests: Add UST snapshot local and streaming
	* Add UST snapshot support
	* Fix: consumer_add_relayd_socket() report errors to sessiond
	* Fix: add missing enum lttcomm_return_code entries
	* Fix: UST per-UID channels persist across application teardown
	* Fix: kernel snapshot metadata handling and error paths
	* Fix: coding style and debug statement
	* Fix: put subbuffer back in kernel snapshot error path
	* Fix: overflow in uri_to_str_url
	* Fix: detect the correct version of LTTng-UST
	* Fix: sessiond: use uint64_t for all session ids
	* Tests: add kernel snapshot streaming to root regression
	* Tests: remove debug output from test
	* Tests: Add kernel snapshot streaming
	* Fix: use snapshot consumer output for kernel
	* Fix: periodical flush check trace before stop
	* Fix: consumer: 64-bit index for relayd rather than 32-bit (v2)
	* Fix UST channel/stream output assignation
	* Fix: send per-pid session id in channel creation
	* Fix: consumer double-close on error
	* Update URCU detection to correctly check for a 0.7 version
	* Fix: snapshot path
	* Add utils function to format current time as a string
	* Fix: set hidden attribute to utils_* calls
	* Fix: consumer handling of metadata for relayd
	* Add kernel snapshot support
	* Support flight recorder mode for a session
	* Implement snapshot commands in lttng-sessiond
	* Add snapshot command to lttng UI
	* Initial import of the snapshot ABI/API in lttng-ctl
	* Use the consumer stream API in consumer_del_stream()
	* Add consumer-stream.c/.h in libconsumer
	* Move multiple URLs parsing fct from lttng-ctl to uri.c
	* Add a lttng-ctl header to facilitate code separation

2013-06-25 lttng-tools 2.2.0 (National Catfish Day)
	* STABLE VERSION
	* Fix: if relayd is unreachable, disable consumer for the session
	* Fix: possible infinite loop in disable ust event
	* Fix: don't enable a channel if a session was already started
	* Fix: bad type for the relayd id
	* Fix: add debug statement in kernel flush metadata
	* Fix: destroy default created channel if add-context fails
	* Fix: clarify tracefile size/count in lttng.1 man
	* Fix: don't stop a session that was not previously started
	* Fix: update lttng.1 man page
	* Fix: bad protocol flow between sessiond and consumerd
	* Fix: kernel memory leak in error path

2013-06-20 lttng-tools 2.2.0-rc3
	* Multiple memory and fd leak fixes in sessiond and consumerd
	* Test: stress test added to the repository but not in make check
	* Using LTTNG_HOME environment variable if exists, with fallback to HOME
	* Implement health check for app registration dispatch
	* Implement health check for app notification thread
	* Revert "Improve channel listing output format"
	* Fix: use lttng pipe to send new stream to thread
	* Change consumer_metadata_pipe to be a lttng_pipe
	* Change consumer_data_pipe to be a lttng_pipe
	* Add wrappers for pipe
	* Add --version command-line option to lttng.
	* Add --with-lttng-ust-prefix config option.
	* Fixes from coverity scan.
	* Stability fixes
	* RCU hash table are now destroyed in a seperate thread in sessiond

2013-05-09 lttng-tools 2.2.0-rc2
	* Fix: split UST per UID/PID default values
	* Fix: don't start the relayd with a wrong --output dir
	* Fix: Erroneous automatic session name when streaming
	* Fix: wrong data port when listing session's URI
	* Fix: don't create a channel on an enable channel
	* Tests: Add missing test_utils_parse_size_suffix to unit tests
	* Fix: print lttng strerror on enable event with filter
	* Fix: change relayd protocol version to 2.2
	* Fix: reset current size for tracefile rotation
	* Fix: remove extra -I for python bindings
	* lttng UI: round up trace file size to subbuf size if needed
	* Fix lttng UI: fix arg parsing, round size to next power of two
	* Fix: check errors in lttng command argument values
	* Implement get_count_order in lttng utils
	* lttng cli: Accept human readable sizes for --subbuf-size
	* Unit tests: don't rebuild units under test
	* Fix: consumerd metadata channel/cache/timer races
	* Fix: consumerd channel destroy race
	* Cleanup: document RCU read-side lock better
	* consumer relayd interaction: fix segfaults
	* Fix: change order of fd get to fix error path
	* Fix: fd leak when creating UST metadata channel
	* Fix: fd leak on error
	* Fix consumerd fd leak
	* Fix RCU-related hangs: incorrect lttng_ht_destroy use
	* rculfhash: check for callers from RCU read-side C.S.
	* Fix: don't call hash table destroy under rcu read-side c.s.
	* Documentation: import updated comments from urcu
	* Fix: segfault in buffer_reg_channel_destroy()
	* Fix: add missing goto error in UST consumer
	* Fix: no need to use run_as_open in the relayd
	* Fix: typo in enable-channel man and help
	* Fix: add some missing hidden attribute
	* Fix: per-uid buffers should only be flushed once on stop
	* Cleanup: Use own mutex within timer setup/teardown
	* Fix: channel management thread should hold a refcount
	* Fix: move metadata cache setup before ownership passing
	* Fix: consumer metadata switch timer error handling
	* Fix: set ptr to NULL to suppress old gcc warnings
	* Fix: linking order of libraries
	* Fix: multiple type mismatch in debug statement
	* Fix: remove mention of trace directory layout in quickstart doc
	* Fix: remove unused path variables from session obj
	* Fix: update lttng.1 man and enable-channel help with read timer size
	* Fix: use channel per domain default values
	* Fix: typos in the code base
	* Fix: deny multiple event types with enable-event
	* Fix: deny the same port for data and control URL
	* Fix: reset consumer destination when changing URIs
	* Fix: don't allow different control and data destination
	* Fix: typos in error strings
	* Improve channel listing output format
	* Fix: enable-channel accepts mismatched option
	* Fix: validate buffer type for UST channel creation

2013-03-28 lttng-tools 2.2.0-rc1
	* Add UST per UID buffers support
	* UST metadata generation are created on the sessiond side
	* Move LTTng-UST buffer ownership from application to consumer
	* Add a UST registry of events and channel in the sessiond
	* UST periodical metadata flush
	* Refactor tests to use prove and tap
	* Support for trace file rotation for the relayd and on disk
	* Support per-context filtering
	* Add channel wakeup fd to monitor close
	* Deprecate enable/disable-consumer
	* Multiple fixes and memory leak fix.

2012-12-20 lttng-tools 2.1.0 (13th Baktun)
	* STABLE VERSION 2.1.0-stable - "Basse Messe"
	* Multiple minor fixes
	* Multiple memory and fd leaks
	* Fix: Off by one in seq num for data pending command
	* Fix: flag metadata stream on quiescent control cmd
	* Fix: prioritize control socket communication in relayd
	* Fix: poll and epoll fd set reallocation
	* Fix: add missing goto pending if data is inflight
	* Fix: remove ua_sess->started assert on stop trace
	* Set classes of traffic in high_throughput_limit
	* Fix: use the poll wait ret value when iterating on fd(s)
	* Fix: force the poll() return value to be nb_fd
	* Fix: Wrong check of node when cleaning up ht
	* Fix: set started flag of ust app after ustctl
	* Fix: memory leak in add relayd socket error path
	* Fix: add packed attribute to filter structure
	* Fix: Add missing health code update for consumer command
	* Add LTTNG_PACKED macro
	* Fix data pending for inflight streaming
	* Map session id of relayd and sessiond in consumer
	* Add the relayd create session command
	* Make the consumer sends a ACK after each command
	* Remove MSG_WAITALL on every recvmsg() socket typ
	* Fix: Add missing relayd ht cleanup and ht destroy
	* Fix: Relayd and sessiond version check
	* Fix: protect consumer_find_channel with rcu locking
	* Fix: don't steal key when adding a metadata stream
	* Consumer hold stream mutex for add stream

2012-12-03 lttng-tools 2.1.0-rc9
	* Fix: set the stream ht static in consumer file
	* Update sessiond man page with new env var
	* Update lttng.1 man page
	* Fix: enable-consumer for all domains missing dir
	* Fix: Add missing fct prototypes when disabling UST
	* Fix a typo in lttng-probe-module name
	* Assign values to enum lttcomm_sessiond_command
	* Fix: run health test only if root
	* Clarify empty string/NULL filter errors
	* Fix: add missing padding for UST filter

2012-11-22 lttng-tools 2.1.0-rc8
	* Fix: Uninit. variable in lttng view
	* Add already enabled UST event error code
	* lttng.h API update: set filter becomes enable event with filter
	* Change the UST event hash table match function
	* Pass lttng_event struct to the set_filter API call
	* Adding context to an event is no longer possible
	* Add UST overlap tests
	* Add filter sequence number to UST
	* Fix: Typo from a previous patch in an assert()
	* Fix: Warn if session is running with lttng view
	* Fix: Add bash requirement to README for make check
	* Fix: add the notion of domain to lttng.1 man page
	* Enable additional kernel probes
	* Update CodingStyle
	* Use the new functions for default subbuf sizes
	* Add default subbuf sizes getter functions
	* Add max() and min() macro in common

2012-11-13 lttng-tools 2.1.0-rc7
	* Fix: Add pointer check when freeing poll events
	* Fix: FD leak on thread error
	* Fix: Wrong fd used by kernel_wait_quiescent
	* Support new lttng-ust error code
	* Fix: Don't set filter if enable event fails
	* Fix: Wrong data port when listing session
	* Fix: Enable event after start command
	* Fix: Teardown of thread_manage_clients on failure of listen/create_poll
	* Add a timeout to UST application socket
	* Fix: Consumerd error socket connect race
	* Fix: Set CLOEXEC flag on every created sockets
	* Remove consumer poll timeout in data thread
	* Fix: RCU hash table seed
	* Fix: Do not install health tests helper libraries
	* Fix: Create default channel on add-context if none
	* Support new liblttng-ust-ctl error code
	* Fix: Add EPIPE error handling on buffer splice
	* Fix: Channel creation error return code was not set
	* Fix: Wrong poll events on UST application socket
	* Fix: Remove dependency to urcu-cds in tools tests
	* Fix: Missing librt dependency in configure check for lttng-ust-ctl
	* Fix: Don't append datetime to default session name
	* Fix: Deny session creation name 'auto'
	* Fix: Add space for stream name CPU number
	* Fix: Add output option to enable-channel command

2012-11-02 lttng-tools 2.1.0-rc6
	* Tests: Add filtering tests for uncovered cases
	* Fix: Sync issue when deleting a data stream
	* Rename data_available to data_pending
	* Fix: consumer health state
	* Fix: Add the ACCOUNTING flag to ht creation and set bucket size to 0
	* Fix: Bad return error code handling
	* Fix: Use after free() of the rundir string
	* Fix: Cleanup UST app session on ustctl create session error
	* Fix: add missing pthread_join in sessiond
	* Fix: free running directory string
	* Fix: UST app clean list node usage
	* Add liblttng-ctl destructor to cleanup memory
	* Fix: Cleanup URIs on teardown
	* Fix: relayd memleaks
	* Fix: Memory leaks of allocated URIs
	* Fix: consumer output memory leak on creation
	* Fix: missing addrlen initialization before accept(2)
	* Fix: relayd trace file padding memleak
	* Fix: Remove useless consumer subdir string concatenation
	* Fix: lttng create allocated path memleak
	* Fix: Cppcheck memleakOnRealloc mistake
	* Fix: Synchronization issue for data available command
	* Fix: consumer relayd cleanup on disconnect
	* Fix: Handle the unary bitwise negation operator (~) in the XML printer
	* Fix: Possible memory leaks when creating filter IR root node
	* Fix: Delete stream on write error in consumer
	* Fix: Error handling when sending relayd sockets to consumer
	* Add stream lock comment for nesting
	* Fix: Mutex and RCU lock nesting in consumer
	* Fix: Uninitialized ret code
	* Fix: Remove bad condition and fix overflow issue
	* Fix: consumerd pthread error flow
	* Fix: Set a single return point and mutex unlock
	* Fix: Remove useless NULL and zero assignment
	* Fix: segfault on create session with two URLs

2012-10-22 lttng-tools 2.1.0-rc5
	* Fix: Remove network stream ID ABI calls
	* Tests: Add filtering tests
	* Wait for data availability when stopping a session
	* Relayd data available command support
	* Lib lttng-ctl data available command support
	* Consumer daemon data available command support
	* Add data structure for the data available command
	* Change the metadata hash table node
	* Make stream hash tables global to the consumer
	* Move add data stream to the data thread
	* Rename consumer threads and spawn them in daemon
	* Fix: relayd close stream command was not working
	* Fix: Relayd and consumerd socket leaks
	* Fix: Missing -ENODATA handling in the consumer
	* Fix: Empty metadata buffer(s) on HUP|ERR
	* ABI with support for compat 32/64 bits
	* Fix: Stream allocation and insertion consistency
	* Fix: output number of bytes written by relayd
	* Add hash table argument to helper functions
	* Fix: Add missing call rcu and read side lock
	* Tests: Fix LD_PRELOAD library lookup path for health tests
	* Fix: Add arbitrary wait period for kernel streaming test
	* Fix coding style and add/change debug statements
	* Fix: Build out of src tree
	* Tests: Add health check tests to configure
	* Tests: Add health check thread stall test
	* Tests: Add health check thread exit test
	* Tests: Add a health check utility program
	* Add testpoints in lttng-sessiond for each threads
	* New testpoint mechanism to instrument binaries for testing
	* Fix: off-by-one in comm proto between lttng-ctl and sessiond
	* Fix: Metadata stream leak when received in consumer
	* Fix: consumer_allocate_stream error handling
	* Fix: consumer should await for initial streams
	* Fix: Missing rcu read side lock in consumer

2012-09-26 lttng-tools 2.1.0-rc4
	* Fix: Change sempahore to pthread conditions
	* Fix: relayd relay_send_version: handle sscanf return code
	* Fix relayd: NULL ptr deref
	* Fix: relayd: possible NULL ptr deref, memory leak, accept fd leak
	* Tests: add print bytecode to filter grammar test
	* Cleanup: assign values to bytecode opcodes
	* Fix: Filter: Fix allocation length error
	* Fix: Filter: add missing ast free
	* Tests: Add high throughput with bandwidth limits test
	* Fix: Returned code when listing kernel channel
	* Tests: Rename helper functions to have consistent names
	* Tests: Cleanup redundant code and use printing helper functions
	* Tests: Add helper functions for printing status and banner
	* Tests: Add a check for color support when printing status
	* Fix: Lib lttng-ctl on error returns lttng code
	* Fix: lttng_set_event_filter() was returning bad error code
	* Fix: printing [no write] on lttng list -uf
	* Fix: Disable event on filter error with lttng
	* Fix: Wrong returned error code on UST enable event
	* Add consumer commands to lttng.1 man page
	* Add lttng_health_check(3) man page
	* Fix: Remove LPOLLNVAL from consumer metadata revents
	* Fix: Mismatch of field name between ust and tools
	* Add the written value when listing fields
	* Fix: Consumer return value check after mmap/splice
	* Don't send the subbuffer padding for streaming
	* Fix: Returned error code in consumer on read buffer

2012-09-12 lttng-tools 2.1.0-rc3
	* Fix: Relayd fix ret value when adding a connection
	* Add new thread in consumer for metadata handling
	* Fix: consumer recv command error path
	* Fix filter: fix recent regressions
	* Update lttng-ust-abi.h from upstream lttng-ust
	* Fix: Accept bytecode of length 65536 bytes
	* Fix: Generation of bytecode longer than 32768 bytes fails
	* Fix: Filter bytecode alloc buffer size must be a power of 2
	* Add lttng-ctl SWIG python bindings
	* Add C++ support to API header files
	* Librarify filter in liblttng-ctl and hide symbols
	* Set hidden visibility for calls used in lttng-ctl
	* Notify the user if a filter is already enabled
	* Install lttng-error.h and include it in lttng.h
	* Add lttng-error.h containing every API err. code
	* Fix: missing hostname context

2012-08-22 lttng-tools 2.1.0-rc2
	* Fix: put back 2.0 output text for lttng create cmd
	* Fix: remove set subdir call that uses bad ptr
	* Filter: Handle the unary bitwise not operator (~) with an unsupported
	* Fix: missing mutex unlock on register consumer err
	* Remove underscore from ifndef of lttng.h
	* Remove unused define in lttng.h
	* Standardize lttng command line usage text
	* Merge duplicate code in consumer for destroy relayd
	* Merge duplicate code in consumer for add relayd
	* Fix: Possible buffer overflows in strncat() usage
	* Move code out of main.c and fix some issues

2012-08-17 lttng-tools 2.1.0-rc1
	* Feature: Network Streaming
	* Add the lttng-relayd binary for network streaming
	* Support user space tracer filtering
	* Multiple fixes

2012-04-19 lttng-tools 2.0.1
	* Fix: test script for kernel module validation
	* Fix: report error to client on consumerd error
	* Fix: add missing ht_destroy at consumer teardown
	* Fix: consumer fd recv thread should write into non-blocking pipe
	* Fix: work-around glibc __nptl_setxid vs clone hang
	* Fix: consumer fd recv poll should be sensitive to POLLPRI too
	* Fix consumer lttng_consumer_poll_socket poll revents check bug
	* Fix: increase consumer open files limit
	* Update README: document dep on modprobe for kernel tracing
	* Fix: wait for sessiond to stop in tests
	* Fix: remove unused return variable
	* Don't report back error on syscalls fail for -a -k
	* Fix: destroy context hash table being NULL
	* Fix: make lttng expand path for trace output opt
	* Fix: return value signedness
	* Fix: man page environment variable name error
	* Fix: check return value on getenv USER

2012-03-20 lttng-tools 2.0.0
	* Fist STABLE version
	* Add version name: Annedd'ale

2012-03-20 lttng-tools 2.0.0-rc4
	* Fix: add small detail to enable-channel man page
	* Fix: warned of arbitrary time for ust-nprocesses test
	* Fix. add limitation to man page
	* Fix: minor changes to lttng.1
	* Fix: add exit values to lttng.1 man page
	* Fix: add delay before validating apps in test nproc
	* Fix: error handling in lttng enable-event
	* Fix: document structure init. to 0 in lttng.h
	* Fix: uninitialized variable
	* Keep track of FD used for UST applications (v2)
	* Fix: lttng view, error message and exit code
	* Small fixes to lttng man pages (v2)
	* Fix: handle EINTR for sendmsg syscall
	* Fix: lttng UI exit value and error message
	* Fix: session lock use after free
	* Fix kernel_list_events memleaks
	* Fix debug message use uninitialized variable
	* Fix: trace_ust_destroy_metadata should check for NULL pointer
	* Fix: various memleaks
	* Fix: hash table allocation out of order on error
	* fix: lttng_ht_destroy memleak

2012-03-16 lttng-tools 2.0.0-rc3
	* Fix: missing headers for make dist
	* Fix: install lttng-consumerd in lib/lttng/libexec/
	* Fix: Redefine MAP_STACK to 0 if not defined by the architecture
	* Fix: consumer CPU hotplug support
	* Fix: double PID registration race
	* Make libcompat independent not to confuse automake
	* Clarify the license of lttng-ust-abi.h
	* Fix: License header
	* Fix: wrong return value on consumer socket creation
	* Fix: test for UST invalid channel parameters at channel creation
	* Fix: recvmsg should handle EINTR
	* Fix: error.h non-static variables for liblttng-ctl
	* Fix: missing _GNU_SOURCE define
	* Fix: improve need root for kernel tracing error message
	* Fix: start/stop lttng message error

2012-03-02 lttng-tools 2.0.0-rc2
	* Fix: meaningful error message
	* Fix: UST consumer need to iterate on streams, just change their key
	* Fix: add missing rcu read lock across RCU HT iteration
	* Fix: kernel session closes fd 0 after create
	* Fix: sendmsg EPIPE should be quiet by default (expected)
	* Fix: thread_registration_apps should set its local sock to -1 when passing it
	* Fix: clock -> sock typo
	* Fix: consumer race: should allow reuse of FD key
	* Fix: Use PERROR all across lttng-tools, never make it quiet
	* Fix: test all close return values in sessiond
	* Fix: All perror turned into PERROR to show file and line number
	* Fix: large audit of close() use in sessiond main.c
	* Fix: main.c client/apps sockets and kernel_trace_fd close(0)
	* Fix: incorrect close of fd 0 for syscall kernel event destroy
	* Fix: sessiond has incorrect missing 0 value in FD check
	* Fix: sessiond app listening: use posix-compliant poll flags
	* Fix: consumer printf type should match ssize_t (%zd)
	* Fix: make ust consumer posix compliant for poll flags
	* Fix security permission on lttng run directory
	* Fix: Display right loglevel_type in error message
	* Fix documentation in lttng.h
	* Fix: lttng UST and kernel consumer: fix ret vs errno mixup
	* Fix: restart consumerd and sessiond when interrupted in poll()
	* Fix: handling bad channel when sending to consumer
	* Fix useless variable
	* Fix add-context returned error
	* fix: add missing break in command handling
	* fix: command handling: do not check domain for commands not requiring domain
	* fix: if tracing group does not exist, do not report a client error
	* Fix: run_as error handling
	* Fix usage note on -a
	* Revert FreeBSD compatibility layer
	* Fix: documented number of subbuffers is incorrect
	* Document that num-subbuf and subbuf-size need to be power of 2
	* Merge branch 'master' of git://git.lttng.org/lttng-tools

2012-02-20 lttng-tools 2.0.0-rc1
	* Fix lttcomm_close_unix_sock to actually close the socket
	* lttng-sessiond: Set group permissions explicitly

2012-02-16 lttng-tools 2.0-pre23
	* configure.ac: Fix consumerd64-libdir typo
	* Fix existing session daemon check
	* Fix missing session locks
	* Fix return value on ust app session create
	* Fix double start/stop trace
	* Fix ust app session started state on start trace
	* modprobe statedump, signal and timer lttng module
	* Fix hyphens in man pages

2012-02-14 lttng-tools 2.0-pre22
	* Add the bash-completion file to the dist tarball
	* Add the LICENSE file too
	* Package used for the Ubuntu LTS (feature freeze)

2012-02-13 lttng-tools 2.0-pre21
	* Fix licensing for hashtable/utils.c
	* Print loglevel value in list -u
	* Remove "<all> from MSG() when no loglevel is selected
	* Initial import of man lttng.1 and lttng-sessiond.8
	* Fix memory leak  master

2012-02-09 lttng-tools 2.0-pre20
	* New lttng view command
	* Multiple loglevel fixes
	* Fix list command
	* Fix session syscall listing
	* Multiple fixes across the code base

2012-02-02 lttng-tools 2.0-pre19
	* Update lttng ust ABI/API copy
	* Implement UST calibrate and change default
	* Add MSG_WAITALL to recvmsg of sessiond-comm
	* Check kernel version for tests
	* Add a '--list-options' option to each command.
	* First import of extras/ with lttng bash completion
	* Remove default defines from lttng.h
	* Fix lttng sessiond spawn wait race
	* Add CMD_WARNING error code
	* Fix context mapping for UST and kernel
	* Add kernel work-around for boot_id
	* Rewrites lttng-ctl's set_session_daemon_path
	* Fix memory lean in all lttng cli commands
	* Update loglevel ABI
	* Add padding to all ABIs for future development.
	* Improve error handling of lttng cli
	* Multiple fixes across the code base (nothing critical)

2012-01-23 lttng-tools 2.0-pre18
	* Complete change of the source directory tree
	* Move compat to common and create an internal lib
	* Rename lttngerr.h to error.h
	* Add kernel module version validation
	* Add UST version validation
	* Change SIGCHLD to SIGUSR1 when lttng waiting on sessiond
	* Fix off-by-one and double list size instead of steady increment

2012-01-19 lttng-tools 2.0-pre17
	* Add and support the new hash table library
	* Add lttng hash table support to liblttng-consumer
	* RCU support for consumer's hash tables
	* UST consumer close shm fd after mapping it
	* Remove CLONE_VM flag for runas making gdb debugging impossible
	* Make MSG() print on stdout instead of stderr
	* Don't init kernel tracer if not root (UID=0)
	* Multiple fixes found when reaching max. number of open files
	* Add some UST tests
	* Multiple segfaults and assert error fixed

2011-12-23 lttng-tools 2.0-pre16
	* Per-user lttng-sessiond now fully functionnal
	* Fix nested double usage of hashtable iterators
	* Support creds passing between lttng and sessiond
	* Rename sessiond internal "uid" fields to "id"
	* Create all trace directories and files with client user credentials
	* Create output directory at session creation command
	* Only allow the user or group owning the session (or root) to control a session
	* Add disable kernel tracing option to sessiond

2011-12-13 lttng-tools 2.0-pre15
	* (MAJOR) User-space tracing support for global domain (lttng-ust 2.0)
	* UST consumer 32/64 bit support
	* Multiple bug fixes
	* Multiple segfault, race and double lock fixes
	* API change for lttng_list_domains, lttng_start/stop and lttng_destroy
	* UST loglevel support
	* ABIs now support 256 char event names
	* Dependency on libpopt >= 1.13
	* Dependency on URCU >= 0.6.7
	* Rename kernel-ctl.c/.h to kernel.c/.h
	* Change malloc to zmalloc in lttng-sessiond code
	* RCU hashtable support for all UST data structure
	* New libconsumer for UST, kernel and one generic
	* Change "--all" option from lttng command line
	* Remove function entry option to discourage its use

2011-09-30 lttng-tools 2.0-pre14
	* Syscall tracing support
	* Multiple bug fixes (nothing critical)
	* Add userspace RCU hash table to tree for dev
	* Update UST ABI
	* Fix epoll that did not handle EINTR
	* Liburcu >= 0.6.5 is needed from this release
	* Enabling all events also enable syscall tracing
	* Debug messages are now on stderr
	* Add basic data structure for UST support but not ready yet.

2011-08-25 lttng-tools 2.0-pre13
	* Memory leaks fixes and double lock list
	* Add UST registration with sychronisation
	* Use poll/epoll compatibility layer for the sessiond
	* Major code cleanup of ltt-sessiond/main.c
	* Increase listen() connexion limit
	* Fix bad enable-channel command
	* Rename trace.c/.h to trace-kernel
	* Multiple fixes on the poll management with the new epoll API

2011-08-25 lttng-tools 2.0-pre12
	* Multiple fixes
	* Fix kconsumerd handling custom channel output
	* Add lttng_register_consumer to register a custom consumer
	* Add multiples tests of the session daemon
	* Default kernel channel size/number changed
	* Support for UST application registration
	* Import LTTng UST 2.0 ABI
	* Send data to kconsumerd before tracing start
	* Export API of lib kernel consumer (liblttngkconsumerd)

2011-08-12 lttng-tools 2.0-pre11
	* New lttng API using the lttng_handle
	* Multiple fixes of kernel consumer
	* Register the consuming function and add a library context
	* Kernel consumer fix mmap/munmap
	* lttng-sessiond-comm header has been privatize
	* Kernel traces are written in the kernel/ directory
	* Add underscore to enable-channel command options

2011-07-29 lttng-tools 2.0-pre6
	* Fix enable multiple events
	* Add function entry feature

2011-07-28 lttng-tools 2.0-pre5
	* Fix Add context command
	* Fix auto session path creation
	* Fix bad strncmp at channel creation

2011-07-23 lttng-tools 2.0-pre4
	* Fix kprobe attributes
	* Fix channel creation when not found at event enable
	* Add safe list iteration
	* Add two tests into the git tree
	* Kernel consumer can be put in debug mode with -vv
	* Trace path is now created on the client side

2011-07-23 lttng-tools 2.0-pre3
	* Fix perf hw cache counter config values

2011-07-22 lttng-tools 2.0-pre2
	* Multiple fixes
	* New add-context options for perf counter and context
	* Using the install bin path from autotool for execl() call
	* Update quickstart guide

2011-07-20 lttng-tools 2.0-pre1
	* First prerelease of lttng-tools.
	* Working with the LTTng v2.0-pre1 modules and Babeltrace v0.1
