#!/bin/bash
#
# Copyright (C) - 2012 David Goulet <dgoulet@efficios.com>
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
NUM_PROCESS=30
TEST_DESC="UST tracer - Generate $NUM_PROCESS process"

CURDIR=$(dirname $0)/
TESTDIR=$CURDIR/../../..
NR_ITER=-1	# infinite loop
NR_USEC_WAIT=1000000
TESTAPP_PATH="$TESTDIR/utils/testapp"
TESTAPP_NAME="gen-ust-events"
TESTAPP_BIN="$TESTAPP_PATH/$TESTAPP_NAME/$TESTAPP_NAME"
SESSION_NAME="ust-nprocesses"
EVENT_NAME="tp:tptest"
TEST_WAIT_SEC=5
NUM_TESTS=9
APPS_PID=

source $TESTDIR/utils/utils.sh

if [ ! -x "$TESTAPP_BIN" ]; then
	BAIL_OUT "No UST $TESTAPP_BIN binary detected."
fi

# MUST set TESTDIR before calling those functions

plan_tests $NUM_TESTS

print_test_banner "$TEST_DESC"

start_lttng_sessiond

# Start tests. Each is an infinite tracing loop.

file_sync_after_first=$(mktemp -u)
file_sync_before_last=$(mktemp -u)

diag "Starting $NUM_PROCESS test applications"
for i in `seq 1 $NUM_PROCESS`
do
	$TESTAPP_BIN $NR_ITER $NR_USEC_WAIT ${file_sync_after_first} ${file_sync_before_last} >/dev/null 2>&1 &
	APPS_PID="${APPS_PID} ${!}"
done

diag "Waiting for applications to be registered to sessiond"

reg_app_count=0
while [ $reg_app_count -ne $NUM_PROCESS ]; do
	listing=$($TESTDIR/../src/bin/lttng/$LTTNG_BIN list -u)
	reg_app_count=$(echo -n $listing | sed "s#$TESTAPP_BIN#$TESTAPP_BIN\n#g" | grep "$TESTAPP_BIN" | wc -l)
done

pass "All applications are registered to sessiond"

TRACE_PATH=$(mktemp -d)

create_lttng_session_ok $SESSION_NAME $TRACE_PATH

enable_ust_lttng_event_ok $SESSION_NAME $EVENT_NAME
start_lttng_tracing_ok $SESSION_NAME

touch ${file_sync_before_last}

# We don't validate whether the applications have traced here, rather
# just that they registered to sessiond (above).

stop_lttng_tracing_ok $SESSION_NAME
destroy_lttng_session_ok $SESSION_NAME

#TODO: add trace validation.

rm -rf $TRACE_PATH

diag "Stopping all spawned applications"
for p in ${APPS_PID}; do
	kill ${p}
	wait ${p} 2>/dev/null
done
APPS_PID=
pass "Stopped all spawned applications"

rm -f ${file_sync_after_first}
rm -f ${file_sync_before_last}

stop_lttng_sessiond
