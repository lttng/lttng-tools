#!/bin/bash
#
# Copyright (C) - 2012 David Goulet <dgoulet@efficios.com>
#
# This library is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the Free
# Software Foundation; version 2.1 of the License.
#
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more
# details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this library; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301 USA
TEST_DESC="Streaming - Kernel tracing"

CURDIR=$(dirname $0)/
TESTDIR=$CURDIR/../../..
EVENT_NAME="sched_switch"
PID_RELAYD=0
SESSION_NAME=""


NUM_TESTS=10

source $TESTDIR/utils/utils.sh

# LTTng kernel modules check
out=`ls /lib/modules/$(uname -r)/extra | grep lttng`
if [ -z "$out" ]; then
	BAIL_OUT "LTTng modules not detected."
fi

if [[ ! -z "$REMOTE_RELAYD_TEST" ]]; then
	override_base_command_ssh $REMOTE_RELAYD_HOST $REMOTE_RELAYD_USER $REMOTE_RELAYD_ID_FILE
fi

TRACE_PATH=$($BASE_COMMAND "mktemp -d")

function test_kernel_before_start ()
{
	local host="localhost"

	if [[ ! -z "$REMOTE_RELAYD_TEST" ]]; then
		host=$REMOTE_RELAYD_HOST
	fi

	diag "Test kernel streaming with event enable BEFORE start"
	create_lttng_session_ok $SESSION_NAME "" "-U net://$host"
	lttng_enable_kernel_event $SESSION_NAME $EVENT_NAME
	start_lttng_tracing_ok $SESSION_NAME
	# Give a second
	sleep 1
	stop_lttng_tracing_ok $SESSION_NAME
	destroy_lttng_session_ok $SESSION_NAME
}

# Deactivated since this feature is not yet available where we can enable
# an event AFTERE tracing has started.
function test_kernel_after_start ()
{
	local host="localhost"

	if [[ ! -z "$REMOTE_RELAYD_TEST" ]]; then
		host=$REMOTE_RELAYD_HOST
	fi

	diag "Test kernel streaming with event enable AFTER start"
	create_lttng_session_ok $SESSION_NAME "" "-U net://$host"
	start_lttng_tracing_ok $SESSION_NAME
	lttng_enable_kernel_event $SESSION_NAME $EVENT_NAME
	# Give a second
	sleep 1
	stop_lttng_tracing_ok $SESSION_NAME
	destroy_lttng_session_ok $SESSION_NAME
}

plan_tests $NUM_TESTS

print_test_banner "$TEST_DESC"

if [ "$(id -u)" == "0" ]; then
	isroot=1
else
	isroot=0
fi

skip $isroot "Root access is needed. Skipping all kernel streaming tests." $NUM_TESTS ||
{
	start_lttng_relayd_remote_support "-o $TRACE_PATH"
	start_lttng_sessiond

	tests=( test_kernel_before_start )

	for fct_test in ${tests[@]};
	do
		SESSION_NAME=$(randstring 16 0)
		${fct_test}

		# Validate test
		validate_trace_remote_support $EVENT_NAME $TRACE_PATH/$HOSTNAME/$SESSION_NAME*
		if [ $? -eq 0 ]; then
			# Only delete if successful
			$BASE_COMMAND "rm -rf $TRACE_PATH"
		else
			break
		fi
	done

	stop_lttng_sessiond
	stop_lttng_relayd_remote_support
	reestablish_base_command
}
